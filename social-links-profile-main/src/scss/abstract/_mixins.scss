@use '../abstract/variables' as *;
@use 'sass:meta';

// Media Queries
@mixin mq($size, $responsiveWidth: min) {
  // If the key exists in the map

  @if map-has-key($grid-breakpoints, $size) {
    // Prints a media query based on the value
    @media #{meta.inspect(map-get($grid-breakpoints, $size))} {
      @content;
    }
  } @else if meta.type-of($size) == 'number' {
    @media (#{$responsiveWidth}-width: #{$size}) {
      @content;
    }
  }
  // If the key doesn't exist in the map
  @else {
    @error "the value #{$size} is invalid. Add a breakpoint key or pixel value ";
  }
}

@mixin make-container($gutter: $container-padding-x) {
  width: 100%;
  padding-inline: $gutter;
  margin-inline: auto;
}

@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, '', '-#{$name}');
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin responsive($breakpoints: $grid-breakpoints) {
}
